# ========================================
# Kafka 事件消费者演示应用配置
# ========================================
# 应用名称
spring.application.name=kafka-08-Event-Consumer
# ========================================
# Kafka 连接配置
# ========================================
# Kafka 服务器地址（多个地址用逗号分隔）
# 默认：192.168.56.10:9092
spring.kafka.bootstrap-servers=192.168.56.10:9092
# ========================================
# 演示 Topic 配置
# ========================================
# 演示用的 Topic 名称
# 应用启动时会自动创建该 Topic（3个分区，1个副本）
demo.topic.name=demo-consumer-topic
# ========================================
# 消费者配置
# ========================================
# 消费者组ID：用于标识消费者组
spring.kafka.consumer.group-id=demo-consumer-group
# 键反序列化器：将字节数组反序列化为字符串
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
# 值反序列化器：将字节数组反序列化为字符串
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
# 自动提交偏移量：true表示自动提交，false表示手动提交
spring.kafka.consumer.enable-auto-commit=true
# 自动提交间隔：自动提交模式下的提交间隔（毫秒）
spring.kafka.consumer.auto-commit-interval=1000
# 偏移量重置策略：earliest（从最早开始）、latest（从最新开始）、none（无偏移量时抛出异常）
spring.kafka.consumer.auto-offset-reset=earliest
# 会话超时时间：消费者与协调器失去连接的超时时间（毫秒）
spring.kafka.consumer.session-timeout=30000
# 心跳间隔：消费者发送心跳的间隔时间（毫秒）
spring.kafka.consumer.heartbeat-interval=3000
# 最大拉取记录数：单次拉取的最大记录数
spring.kafka.consumer.max-poll-records=500
# 拉取超时时间：拉取数据的超时时间（毫秒）
spring.kafka.consumer.fetch-max-wait=500
# ========================================
# 监听器配置
# ========================================
# 监听器确认模式：batch（批量确认）、manual（手动确认）、manual_immediate（立即手动确认）
spring.kafka.listener.ack-mode=batch
# 并发消费者数量：每个监听器容器的并发消费者数量
spring.kafka.listener.concurrency=1
# 监听器容器类型：single（单线程）、batch（批处理）
spring.kafka.listener.type=single
