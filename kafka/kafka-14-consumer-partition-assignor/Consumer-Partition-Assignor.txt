消息消费的分区策略
Kafka消费消息时的分区策略：是指Kafka主题topic中哪些分区应该由哪些消费者来消费；

Kafka有多种分区分配策略，默认的分区分配策略是RangeAssignor，除了RangeAssignor策略外，Kafka还有其他分区分配策略：
RoundRobinAssignor、
StickyAssignor
CooperativeStickyAssignor，
这些策略各有特点，可以根据实际的应用场景和需求来选择适合的分区分配策略；


消息消息的分区策略
Kafka默认的消费分区分配策略：RangeAssignor；假设如下：
一个主题myTopic有10个分区；（p0 - p9）
一个消费者组内有3个消费者：consumer1、consumer2、consumer3；
RangeAssignor消费分区策略：
1、计算每个消费者应得的分区数：分区总数（10）/  消费者数量（3）= 3 ... 余1；
每个消费者理论上应该得到3个分区，但由于有余数1，所以前1个消费者会多得到一个分区；
consumer1（作为第一个消费者）将得到 3 + 1 = 4 个分区；
consumer2 和 consumer3 将各得到 3 个分区；
2、具体分配：分区编号从0到9，按照编号顺序为消费者分配分区：
    consumer1 将分配得到分区 0、1、2、3；
    consumer2 将分配得到分区 4、5、6；
    consumer3 将分配得到分区 7、8、9；


RangeAssignor策略是根据消费者组内的消费者数量和主题的分区数量，来均匀地为每个消费者分配分区。

消息消息的分区策略
继续以前面的例子数据，采用RoundRobinAssignor策略进行测试，得到的结果如下：
C1： 0,    3， 6， 9
C2： 1， 4， 7
C3： 2， 5， 8


消息消息的分区策略
StickyAssignor消费分区策略：
尽可能保持消费者与分区之间的分配关系不变，即使消费组的消费者成员发生变化，减少不必要的分区重分配；
尽量保持现有的分区分配不变，仅对新加入的消费者或离开的消费者进行分区调整。这样，大多数消费者可以继续消费它们之前消费的分区，只有少数消费者需要处理额外的分区；所以叫“粘性”分配；
CooperativeStickyAssignor消费分区策略：
与 StickyAssignor 类似，但增加了对协作式重新平衡的支持，即消费者可以在它离开消费者组之前通知协调器，以便协调器可以预先计划分区迁移，而不是在消费者突然离开时立即进行分区重分配；























